
{#
/**
 * @file
 * Default theme implementation for flag links.
 *
 * Available functions:
 * - flagcount(flag, flaggable) gets the number of flaggings for the given flag and flaggable.
 *
 * Available variables:
 * - attributes: HTML attributes for the link element.
 * - title: The flag link title.
 * - action: 'flag' or 'unflag'
 * - flag: The flag object.
 * - flaggable: The flaggable entity.
 */
#}
{# Attach the flag CSS library.#}
{{ attach_library('flag/flag.link') }}

{# maps to theme hook flag_link; this overrides only this flag's link #}


{% set is_checked = (action == 'unflag') %} {# flagged => unflag link shown => checked #}
{% set input_id = 'fb-yes-' ~ flaggable.id() %}
{% set classes = [
  'flag',
  'flag-' ~ flag.id()|clean_class,
  'js-flag-' ~ flag.id()|clean_class ~ '-' ~ flaggable.id(),
  action == 'unflag' ? 'action-unflag' : 'action-flag'
] %}

<div class="{{ classes|join(' ') }}">
  {# visually-hidden input just for “peer-checked” styling #}
  <div class="inline-flex h-[53px] cursor-pointer items-center justify-center gap-2 rounded-lg border border-[#BDBDBD] px-5 text-[#6A7282] transition-colors duration-200 hover:bg-[#FFF3E9] peer-checked:border-[#F27B21] peer-checked:bg-[#FFF3E9] peer-checked:text-black">
  <input id="{{ input_id }}" type="radio" name="feedback-{{ flaggable.id() }}" class="peer sr-only" {{ is_checked ? 'checked' : '' }} />

  {# use the real flag <a> as the “label” button #}
  <a{{ attributes.addClass([
        ''
      ]) }}>
    <i class="fa-regular fa-thumbs-down"></i>
    <span>{{ title ?: 'Yes' }}</span>
  </a>
  </div>
</div>
