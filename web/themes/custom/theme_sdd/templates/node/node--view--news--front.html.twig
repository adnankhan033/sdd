{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 *
 * @see template_preprocess_node()
 *
 */
#}


{# Determine if this is the first item #}
{% set is_first = index_count == 'index-0' %}

{# Define container classes based on position #}
{% set container_classes = [
  'flex',
  'h-full',
  'flex-col',
  'items-start',
  'justify-between',
  'md:border-s',
  'border-b',
  'md:border-b-0',
  'pb-6',
  'md:pb-0',
  is_first ? 'border-orange' : 'border-[#D4D4D8]',
  'md:ps-7'
]|join(' ') %}



{% set flex_ratio_class = is_first ? 'lg:flex-4/7 flex-1/3' : 'lg:flex-2/7  flex-1/3' %}
{% set image_height_class = is_first ? 'h-[310px]' : 'h-[190px]' %}
{% set view_link = is_first ? 
'group/btn relative hidden md:inline-flex  h-[51px] rounded-full border border-orange bg-[#FFF3E9] py-3 pe-[65px] ps-7 text-orange transition-all' :
 'hidden md:inline-flex group/btn relative  h-[51px] rounded-full border border-[#D4D4D8] bg-[#F9FAFB] py-3 pe-[65px] ps-7 text-[#6A7282] transition-all hover:border-orange hover:bg-[#FFF3E9] hover:text-orange' %}

{% set circle_round = is_first 
? 'absolute -end-1 top-0 flex h-[50px] w-[53px] items-center justify-center rounded-full border border-orange bg-orange transition-all' 
: 'absolute -end-1 top-0 flex h-[50px] w-[53px] items-center justify-center rounded-full border border-[#D4D4D8] bg-white transition-all group-hover/btn:border-orange group-hover/btn:bg-orange' %}

{% set arrow = is_first 
? 'fa-regular fa-arrow-right text-xs text-white' 
: 'fa-regular fa-arrow-right text-xs text-[#99A1AF] group-hover/btn:text-white' %}


<div class="{{ flex_ratio_class }}">
  <div class="{{ container_classes }}">
    <div class="{{ is_first ? 'w-full': ''}}">
      <div class="image mb-11">
        {# Render field_image safely without extra tags #}
        <img src="{{ content.field_image|render|striptags|trim|raw }}" 
             class="{{ image_height_class }} w-full max-w-full rounded-sm object-cover" alt="" />
      </div>
      <div class="mb-11">
        <div class="mb-5 text-sm text-[#99A1AF]">
          {{ content.field_sh_date['#items'] ? content.field_sh_date }}
        </div>
        <h3 class="text-2xl">
          {{ short_label }}
        </h3>
      </div>
    </div>

    <a href="{{ url }}" 
       class="{{ view_link }}">
      <span>{{ 'View all'|t }}</span>

      <span class="{{ circle_round }}">
        <i class="{{ arrow }}"></i>
      </span>
    </a>
  </div>
</div>
